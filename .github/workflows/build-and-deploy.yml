name: Build and Deploy to GCR

on:
  push:
    branches:
      - master

env:
  PROJECT_ID: ${{ secrets.PROJECT_PRI_NAME }}
  # Web App Image
  IMAGE_NAME: ${{ secrets.WEB_CONTAINER_IMAGE }}
  # Artifact Registry
  REPO_NAME: ${{ secrets.ARTIFACT_REGISTORY_WEB_APP }}
  LOCATION: ${{ secrets.GCP_LOCATION }}
  # GCE
  GCE_INSTANCE: ${{ secrets.GCE_INSTANCE }}
  # GCE projects
  GCE_PROJECTS: ${{ secrets.GCE_PROJECTS }}
  # GCE zone
  GCE_ZONE: ${{ secrets.GCE_ZONE }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Google Cloud Authentication
      uses: google-github-actions/auth@v1
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}

    - name: Setup .env file
      run: |
        echo "NEXT_PUBLIC_GET_INTRO_JSON_PROD=${{ secrets.NEXT_PUBLIC_GET_INTRO_JSON_PROD }}" >> .env
        echo "NEXT_PUBLIC_GET_INTRO_JSON=${{ secrets.NEXT_PUBLIC_GET_INTRO_JSON }}" >> .env
        echo "NEXT_PUBLIC_SEND_MAIL_URL_PROD=${{ secrets.NEXT_PUBLIC_SEND_MAIL_URL_PROD }}" >> .env
        echo "NEXT_PUBLIC_SEND_MAIL_URL=${{ secrets.NEXT_PUBLIC_SEND_MAIL_URL }}" >> .env
        echo "NEXT_PUBLIC_SEND_ERROR_LOG_PROD=${{ secrets.NEXT_PUBLIC_SEND_ERROR_LOG_PROD }}" >> .env
        echo "NEXT_PUBLIC_SEND_ERROR_LOG=${{ secrets.NEXT_PUBLIC_SEND_ERROR_LOG }}" >> .env
        echo "NEXT_PUBLIC_CONTACT_ERROR_NAME=${{ secrets.NEXT_PUBLIC_CONTACT_ERROR_NAME }}" >> .env
        echo "NEXT_PUBLIC_CONTACT_ERROR_EMAIL=${{ secrets.NEXT_PUBLIC_CONTACT_ERROR_EMAIL }}" >> .env
        echo "NEXT_PUBLIC_CONTACT_ERROR_MESSAGE=${{ secrets.NEXT_PUBLIC_CONTACT_ERROR_MESSAGE }}" >> .env
        echo "NEXT_PUBLIC_CONTACT_CONFIRM=${{ secrets.NEXT_PUBLIC_CONTACT_CONFIRM }}" >> .env
        echo "NEXT_PUBLIC_MAIN_TITLE_PREFIX=${{ secrets.NEXT_PUBLIC_MAIN_TITLE_PREFIX }}" >> .env
        echo "NEXT_PUBLIC_NOTICE_SUCCESSED=${{ secrets.NEXT_PUBLIC_NOTICE_SUCCESSED }}" >> .env
        echo "NEXT_PUBLIC_NOTICE_FAILED=${{ secrets.NEXT_PUBLIC_NOTICE_FAILED }}" >> .env
        echo "NEXT_PUBLIC_SKILLS_CARD_FIRST_SHOW_SUM=${{ secrets.NEXT_PUBLIC_SKILLS_CARD_FIRST_SHOW_SUM }}" >> .env
        echo "NEXT_PUBLIC_SKILLS_CARD_LOAD_COUNT=${{ secrets.NEXT_PUBLIC_SKILLS_CARD_LOAD_COUNT }}" >> .env
        echo "NGINX_CONTAINER=${{ secrets.NGINX_CONTAINER }}" >> docker-compose.env
        echo "NGINX_PORT_1=${{ secrets.NGINX_PORT_1 }}" >> docker-compose.env
        echo "NGINX_PORT_2=${{ secrets.NGINX_PORT_2 }}" >> docker-compose.env
        echo "WEB_CONTAINER=${{ secrets.WEB_CONTAINER }}" >> docker-compose.env
        echo "WEB_IMAGE=${{ secrets.WEB_IMAGE }}" >> docker-compose.env
        echo "WEB_PORT_1=${{ secrets.WEB_PORT_1 }}" >> docker-compose.env

    - name: Configure Docker
      run: gcloud auth configure-docker asia-northeast1-docker.pkg.dev

    #- name: Backup latest image
    #  run: |
    #    docker pull ${{ env.LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPO_NAME }}/${{ env.IMAGE_NAME }}:latest || true
    #    docker tag ${{ env.LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPO_NAME }}/${{ env.IMAGE_NAME }}:latest ${{ env.LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPO_NAME }}/${{ env.IMAGE_NAME }}:backup
    #    docker push ${{ env.LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPO_NAME }}/${{ env.IMAGE_NAME }}:backup

    #- name: Build and push Docker image
    #  uses: docker/build-push-action@v5
    #  with:
    #    context: .
    #    file: docker/Dockerfile
    #    push: true
    #    tags: ${{ env.LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPO_NAME }}/${{ env.IMAGE_NAME }}

    - name: Create Nginx configuration file
      run: |
        echo "NGINX_HTTP_PORT=${{ secrets.NGINX_HTTP_PORT }}" >> nginx.env
        echo "NGINX_DOMAIN=${{ secrets.NGINX_DOMAIN }}" >> nginx.env
        echo "LOCAL_WEB_URL=${{ secrets.LOCAL_WEB_URL }}" >> nginx.env
        echo "NGINX_HTTPS_PORT=${{ secrets.NGINX_HTTPS_PORT }}" >> nginx.env
        echo "CHAIN_PEM=${{ secrets.CHAIN_PEM }}" >> nginx.env
        echo "PRI_PEM=${{ secrets.PRI_PEM }}" >> nginx.env
        gcloud compute ssh ${{ env.GCE_INSTANCE }} --zone ${{ env.GCE_ZONE }} -- "mkdir -p /home/runner/projects" || exit 1
        gcloud compute scp nginx.env ${{ env.GCE_INSTANCE }}:/home/runner/projects/. --zone ${{ env.GCE_ZONE }} || exit 1
        gcloud compute scp ./etc/nginx/conf.d/default_template.conf ${{ env.GCE_INSTANCE }}:/home/runner/projects/. --zone ${{ env.GCE_ZONE }} || exit 1
        gcloud compute ssh ${{ env.GCE_INSTANCE }} --zone ${{ env.GCE_ZONE }} -- -o StrictHostKeyChecking=no "ls -l /home/runner && ls -l /home/runner/projects"
        gcloud compute ssh ${{ env.GCE_INSTANCE }} --zone ${{ env.GCE_ZONE }} -- -o StrictHostKeyChecking=no "
          . /home/runner/projects/nginx.env
          export NGINX_HTTP_PORT=\${NGINX_HTTP_PORT}
          export NGINX_DOMAIN=\${NGINX_DOMAIN}
          export LOCAL_WEB_URL=\${LOCAL_WEB_URL}
          export NGINX_HTTPS_PORT=\${NGINX_HTTPS_PORT}
          export CHAIN_PEM=\${CHAIN_PEM}
          export PRI_PEM=\${PRI_PEM}
          printenv
          cd /home/runner/projects
          touch default.conf
          sudo chmod 666 default.conf
          envsubst < default_template.conf > default.conf
          " || exit 1
        gcloud compute ssh ${{ env.GCE_INSTANCE }} --zone ${{ env.GCE_ZONE }} -- -o StrictHostKeyChecking=no "mkdir -p ${{ env.GCE_PROJECTS }}/etc/nginx/conf.d" || exit 1
        gcloud compute ssh ${{ env.GCE_INSTANCE }} --zone ${{ env.GCE_ZONE }} -- -o StrictHostKeyChecking=no "sudo cp -fp /home/runner/projects/default.conf ${{ env.GCE_PROJECTS }}/etc/nginx/conf.d/default.conf" || exit 1

    - name: Deploy files to GCE
      run: |
        # ... deployment commands ...
        gcloud compute scp docker-compose.env ${{ env.GCE_INSTANCE }}:${{ env.GCE_PROJECTS }}/. --zone ${{ env.GCE_ZONE }} || exit 1
        gcloud compute scp ./docker/docker-compose.yml ${{ env.GCE_INSTANCE }}:${{ env.GCE_PROJECTS }}/. --zone ${{ env.GCE_ZONE }} || exit 1
        gcloud compute ssh ${{ env.GCE_INSTANCE }} --zone ${{ env.GCE_ZONE }} -- -o StrictHostKeyChecking=no "cd ${{ env.GCE_PROJECTS }} && docker-compose --env-file docker-compose.env up -d" || exit 1