name: Build and Deploy to GCR

on:
  push:
    branches:
      - master

env:
  PROJECT_ID: ${{ secrets.PROJECT_PRI_NAME }}
  # Web App Image
  IMAGE_NAME: ${{ secrets.WEB_CONTAINER_IMAGE }}
  # Artifact Registry
  REPO_NAME: ${{ secrets.ARTIFACT_REGISTORY_WEB_APP }}
  LOCATION: ${{ secrets.GCP_LOCATION }}
  # GCE
  GCE_INSTANCE: ${{ secrets.GCE_INSTANCE }}
  # GCE projects
  GCE_PROJECTS: ${{ secrets.GCE_PROJECTS }}
  # GCE user
  GCE_USER: ${{ secrets.GCE_USER }}
  # GCE zone
  GCE_ZONE: ${{ secrets.GCE_ZONE }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Google Cloud Authentication
      uses: google-github-actions/auth@v1
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}

    - name: Setup .env file
      run: |
        echo "NGINX_CONTAINER=${{ secrets.NGINX_CONTAINER }}" >> docker-compose.env
        echo "NGINX_PORT_1=${{ secrets.NGINX_PORT_1 }}" >> docker-compose.env
        echo "NGINX_PORT_2=${{ secrets.NGINX_PORT_2 }}" >> docker-compose.env
        echo "WEB_CONTAINER=${{ secrets.WEB_CONTAINER }}" >> docker-compose.env
        echo "WEB_IMAGE=${{ secrets.WEB_IMAGE }}" >> docker-compose.env
        echo "WEB_PORT_1=${{ secrets.WEB_PORT_1 }}" >> docker-compose.env

        echo "PROJECT_ID: ${{ env.PROJECT_ID }}"
        echo "IMAGE_NAME: ${{ env.IMAGE_NAME }}"
        echo "REPO_NAME:  ${{ env.REPO_NAME }}"
        echo "LOCATION:   ${{ env.LOCATION }}"

    - name: Configure Docker
      run: gcloud auth configure-docker asia-northeast1-docker.pkg.dev

    - name: Trigger Google Cloud Build
      run: |
        gcloud builds submit --config ./gcp/workflows/cloudbuild.yaml

    # - name: Create Nginx configuration file
    #   run: |
    #     # Create nginx.env
    #     echo "NGINX_HTTP_PORT=${{ secrets.NGINX_HTTP_PORT }}" >> nginx.env
    #     echo "NGINX_DOMAIN=${{ secrets.NGINX_DOMAIN }}" >> nginx.env
    #     echo "LOCAL_WEB_URL=${{ secrets.LOCAL_WEB_URL }}" >> nginx.env
    #     echo "NGINX_HTTPS_PORT=${{ secrets.NGINX_HTTPS_PORT }}" >> nginx.env
    #     echo "CHAIN_PEM=${{ secrets.CHAIN_PEM }}" >> nginx.env
    #     echo "PRI_PEM=${{ secrets.PRI_PEM }}" >> nginx.env
    #     # Create runner projects file
    #     gcloud compute ssh ${{ env.GCE_INSTANCE }} --zone ${{ env.GCE_ZONE }} -- "mkdir -p /home/runner/projects" || exit 1
    #     # GCE Deploy
    #     gcloud compute scp nginx.env ${{ env.GCE_INSTANCE }}:/home/runner/projects/. --zone ${{ env.GCE_ZONE }} || exit 1
    #     gcloud compute scp ./etc/nginx/conf.d/default_template.conf ${{ env.GCE_INSTANCE }}:/home/runner/projects/. --zone ${{ env.GCE_ZONE }} || exit 1
    #     # Create default.conf
    #     gcloud compute ssh ${{ env.GCE_INSTANCE }} --zone ${{ env.GCE_ZONE }} -- -o StrictHostKeyChecking=no "
    #       ls -l /home/runner/projects
    #       . /home/runner/projects/nginx.env
    #       export NGINX_HTTP_PORT=\${NGINX_HTTP_PORT}
    #       export NGINX_DOMAIN=\${NGINX_DOMAIN}
    #       export LOCAL_WEB_URL=\${LOCAL_WEB_URL}
    #       export NGINX_HTTPS_PORT=\${NGINX_HTTPS_PORT}
    #       export CHAIN_PEM=\${CHAIN_PEM}
    #       export PRI_PEM=\${PRI_PEM}
    #       cd /home/runner/projects
    #       touch default.conf
    #       sudo chmod 666 default.conf
    #       envsubst  < default_template.conf > default.conf
    #       sed -i -e 's/URI_VALUE/\$uri/g' default.conf
    #       sed -i -e 's/HOST_VALUE/\$host/g' default.conf
    #       sed -i -e 's/REMOTE_ADDR_VALUE/\$remote_addr/g' default.conf
    #       sed -i -e 's/PROXY_X_FORWARDED_FOR/\$proxy_add_x_forwarded_for/g' default.conf
    #       sed -i -e 's/SCHEME_VALUE/\$scheme/g' default.conf
    #       " || exit 1
    #     # GCE Copy
    #     gcloud compute ssh ${{ env.GCE_INSTANCE }} --zone ${{ env.GCE_ZONE }} -- -o StrictHostKeyChecking=no "
    #       sudo chown ${{ env.GCE_USER }}:${{ env.GCE_USER }} /home/runner/projects/default.conf
    #       mkdir -p ${{ env.GCE_PROJECTS }}/etc/nginx/conf.d
    #       sudo cp -fp /home/runner/projects/default.conf ${{ env.GCE_PROJECTS }}/etc/nginx/conf.d/default.conf" || exit 1

    # - name: Deploy files to GCE
    #   run: |
    #     # GCE Deploy
    #     gcloud compute scp docker-compose.env ${{ env.GCE_INSTANCE }}:/home/runner/projects/. --zone ${{ env.GCE_ZONE }} || exit 1
    #     gcloud compute scp ./docker/docker-compose.yml ${{ env.GCE_INSTANCE }}:/home/runner/projects/. --zone ${{ env.GCE_ZONE }} || exit 1
    #     # GCE Copy
    #     gcloud compute ssh ${{ env.GCE_INSTANCE }} --zone ${{ env.GCE_ZONE }} -- -o StrictHostKeyChecking=no "
    #       cd /home/runner/projects
    #       ls -l
    #       sudo chown ${{ env.GCE_USER }}:${{ env.GCE_USER }} docker-compose.*
    #       sudo cp -fp docker-compose.* ${{ env.GCE_PROJECTS }}/.
    #       ls -l ${{ env.GCE_PROJECTS }}
    #       rm -f /home/runner/projects/*" || exit 1
    #     # docker-compose
    #     gcloud compute ssh ${{ env.GCE_INSTANCE }} --zone ${{ env.GCE_ZONE }} -- -o StrictHostKeyChecking=no "
    #       cd ${{ env.GCE_PROJECTS }}
    #       sudo -u ${{ env.GCE_USER }} docker-compose --env-file docker-compose.env up -d" || exit 1